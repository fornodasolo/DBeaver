

--  category:  IBM i Services
--  description:  Storage - ASP management

--
-- description: Review ASP and IASP definition and status
--
select * from qsys2.asp_info
  order by ASP_NUMBER;

--
-- description: Review ASP and IASP storage status
--
select ASP_NUMBER, DEVD_NAME, DISK_UNITS, PRESENT, 
       TOTAL_CAPACITY_AVAILABLE, TOTAL_CAPACITY, 
       DEC(DEC(TOTAL_CAPACITY_AVAILABLE, 19, 2) /
       DEC(TOTAL_CAPACITY, 19, 2) * 100, 19, 2) AS
       AVAILABLE_SPACE
       from qsys2.asp_info ORDER BY 7 ASC;


--  category:  IBM i Services
--  description:  Storage - ASP management

--
-- description: SQL alternative to WRKASPJOB
--
SELECT iasp_name AS iasp,
       iasp_number AS iaspN,
       job_name,
       job_status AS status,
       job_type AS TYPE,
       user_name AS "User",
       subsystem_name AS sbs,
       sql_status,
       sql_stmt,
       sql_time,
       asp_type,
       rdb_name
   FROM qsys2.asp_job_info;


--  category:  IBM i Services
--  description:  Storage - IASP Vary ON and OFF steps

--
-- description: Review the most expensive steps in recent vary ONs
--
SELECT v.* FROM qsys2.asp_vary_info v 
WHERE OPERATION_TYPE = 'VARY ON'
AND END_TIMESTAMP > CURRENT TIMESTAMP - 21 DAYS 
ORDER BY duration DESC; 

--
-- description: Review the most expensive steps in recent vary ONs
--
SELECT iasp_name,       operation_type,
       operation_number,MAX(start_timestamp) AS WHEN,
       BIGINT(SUM(duration)) AS total_seconds
   FROM qsys2.asp_vary_info WHERE DURATION IS NOT NULL
   AND END_TIMESTAMP > CURRENT TIMESTAMP - 21 DAYS
   GROUP BY iasp_name, operation_type, operation_number
   ORDER BY total_seconds DESC;


--  category:  IBM i Services
--  description:  Storage - Media Library

-- Check for unavailable tape drives 
SELECT * FROM QSYS2.MEDIA_LIBRARY_INFO 
  WHERE DEVICE_STATUS = 'VARIED OFF';


--  category:  IBM i Services
--  description:  Storage - NVMe Fuel Gauge

--
-- NVMe health detail
--      
select CAP_MET, LIFE, DEGRADED, TEMP_WARN, TEMP_CRIT, 
       DEVICE_TYPE, RESOURCE_NAME, DEVICE_MODEL,
       SERIAL_NUMBER
  from QSYS2.NVME_INFO;


--  category:  IBM i Services
--  description:  Storage - Review status of all storage H/W

--
-- Query information for all DISKs, order by percentage used
--
SELECT PERCENT_USED, 
       CASE WHEN UNIT_TYPE = 1 
          THEN 'SSD' 
          ELSE 'DISK' END as STORAGE_TYPE, 
       A.* 
FROM QSYS2.SYSDISKSTAT A 
ORDER BY PERCENT_USED DESC;


--  category:  IBM i Services
--  description:  Storage - Storage details for a specific user 

--
-- Retrieve the details of objects owned by a specific user
-- Note: replace user-name with the user profile name of interest
--
SELECT b.objlongschema, b.objname, b.objtype, b.objattribute, b.objcreated, b.objsize, b.objtext, b.days_used_count, b.last_used_timestamp,b.* FROM 
   TABLE (QSYS2.OBJECT_STATISTICS('*ALLUSRAVL ', '*LIB') ) as a, 
   TABLE (QSYS2.OBJECT_STATISTICS(a.objname, 'ALL')  ) AS b
WHERE b.OBJOWNER = 'SMEOQ'
ORDER BY b.OBJSIZE DESC
FETCH FIRST 100 ROWS ONLY;

select * from qsys2.OBJECT_OWNERSHIP WHERE OBJECT_TYPE= '*PGM'
FETCH FIRST 100 ROWS ONLY;


select count(*) from qsys2.OBJECT_OWNERSHIP 

WHERE OBJECT_TYPE= '*PGM'
FETCH FIRST 100 ROWS ONLY;


--  category:  IBM i Services
--  description:  Storage - Temporary storage consumption, by DB workload

--
-- Which active database server connections 
-- are consuming the most temporary storage
--
WITH TOP_TMP_STG (bucket_current_size, q_job_name) AS (
SELECT bucket_current_size, rtrim(job_number) concat '/' concat rtrim(job_user_name) concat '/' concat rtrim(job_name) as q_job_name 
FROM QSYS2.SYSTMPSTG 
WHERE job_status = '*ACTIVE' AND JOB_NAME IN ('QZDASOINIT', 'QBATCHUI',  'QZDASSINIT', 'QRWTSRVR', 'QSQSRVR')
ORDER BY bucket_current_size desc fetch first 10 rows only
) SELECT bucket_current_size, q_job_name, V_SQL_STATEMENT_TEXT, B.* FROM TOP_TMP_STG, TABLE(QSYS2.GET_JOB_INFO(q_job_name)) B;


--  category:  IBM i Services
--  description:  Storage - Temporary storage consumption, by active jobs

--
-- Which active jobs are the top consumers of temporary storage?
--
SELECT  BUCKET_CURRENT_SIZE, 
--VARCHAR_FORMAT(BUCKET_CURRENT_SIZE,'999,999,999,999,999,999,999,999') AS STORAGE_MB,
BUCKET_PEAK_SIZE, JOB_STATUS, 
  RTRIM(JOB_NUMBER) CONCAT '/' 
  CONCAT RTRIM(JOB_USER_NAME) 
  CONCAT '/' 
  CONCAT RTRIM(JOB_NAME) AS Q_JOB_NAME 
FROM QSYS2.SYSTMPSTG 
WHERE JOB_STATUS IN ('*ACTIVE', '*MSGW' )
ORDER BY BUCKET_CURRENT_SIZE DESC;

SELECT * FROM QSYS2.JOBUSE SYSTMPSTG 




SELECT * FROM  QSYS2.JOBQ_INFO
 
SELECT * FROM  QSYS2.XSROBJECTS




SELECT * FROM SMEDATBND.TABEL00F WHERE TTSETT='ZON'


DELETE FROM SMETSTBND.TABEL00F WHERE TTSETT='ZON'

INSERT INTO SMETSTBND.TABEL00F (SELECT * FROM SMEDATBND.TABEL00F WHERE TTSETT='XNE')

--  category:  IBM i Services
--  description:  Storage - Top 10 Spool consumers, by user 

--
-- Find the top 10 consumers of SPOOL storage 
--
SELECT USER_NAME, SUM(SIZE) AS TOTAL_SPOOL_SPACE FROM 
   TABLE (QSYS2.OBJECT_STATISTICS('QSYS      ', '*LIB') ) as a, 
   TABLE (QSYS2.OBJECT_STATISTICS(a.objname, 'OUTQ')  ) AS b, 
   TABLE (QSYS2.OUTPUT_QUEUE_ENTRIES(a.objname, b.objname, '*NO')) AS c
WHERE USER_NAME NOT LIKE 'Q%' 
GROUP BY USER_NAME
ORDER BY TOTAL_SPOOL_SPACE DESC
FETCH FIRST 10 ROWS ONLY;


--  category:  IBM i Services
--  description:  Storage - Top 10 consumers, by user 

--
-- Review the top 10 storage consumers
SELECT A.AUTHORIZATION_NAME, SUM(A.STORAGE_USED) AS TOTAL_STORAGE_USED, B.TEXT_DESCRIPTION, B.ACCOUNTING_CODE, B.MAXIMUM_ALLOWED_STORAGE
  FROM QSYS2.USER_STORAGE A 
  INNER JOIN QSYS2.USER_INFO B ON B.USER_NAME = A.AUTHORIZATION_NAME WHERE B.USER_NAME NOT LIKE 'Q%' 
  GROUP BY A.AUTHORIZATION_NAME, B.TEXT_DESCRIPTION, B.ACCOUNTING_CODE, B.MAXIMUM_ALLOWED_STORAGE
  ORDER BY TOTAL_STORAGE_USED DESC FETCH FIRST 10 ROWS ONLY;


--  category:  IBM i Services
--  description:  Storage - iASP storage consumption

--
--  Format output and break down by iASP
--
SELECT USER_NAME, ASPGRP,
       VARCHAR_FORMAT(MAXSTG, '999,999,999,999,999,999,999,999') AS MAXIMUM_STORAGE_KB,
       VARCHAR_FORMAT(STGUSED,'999,999,999,999,999,999,999,999') AS STORAGE_KB
       FROM QSYS2.USER_STORAGE 
  ORDER BY 4 DESC;


  
 SELECT PKTABLE_CAT, PKTABLE_SCHEM,  PKTABLE_NAME, PKCOLUMN_NAME, FKTABLE_CAT, FKTABLE_SCHEM, FKTABLE_NAME,  FKCOLUMN_NAME, KEY_SEQ, UPDATE_RULE, DELETE_RULE, FK_NAME, PK_NAME,  DEFERRABILITY  FROM SYSIBM.SQLFOREIGNKEYS WHERE FKTABLE_SCHEM = ? AND FKTABLE_NAME = ? ORDER BY 2,3,9

 
 INSERT INTO SMETSTBND.TABEL00F
 SELECT * FROM SMEDATBND.TABEL00F WHERE TTSETT='ZON' AND TTELEM LIKE 'S%' 
 
 DELETE FROM SMETSTBND.TABEL00F WHERE TTSETT='ZON' AND TTELEM LIKE 'S%' 
 
 COMMIT 
 
 
 SELECT * FROM smetstbnd.v5tdoc0f  
 WHERE t§dTin=20230406 AND t§ogin='XNBI01'
 
 
 SELECT * FROM smedatbnd.brenti0f WHERE E§DTAG >=20230405
 
 
 
 
 
--  category:  IBM i Services
--  description:  Librarian - Find objects

--
-- Find user libraries that are available, return full details about the libraries
--
SELECT * FROM TABLE (QSYS2.OBJECT_STATISTICS('*ALLUSRAVL ', '*LIB') ) as a;

--
-- Super Fast retrieval of library and schema name
--
SELECT OBJNAME AS LIBRARY_NAME, OBJLONGNAME AS SCHEMA_NAME
   FROM TABLE(QSYS2.OBJECT_STATISTICS('*ALLSIMPLE', 'LIB')) Z
     ORDER BY 1 ASC;

--
-- Super Fast retrieval names of an object type within a library
--
SELECT objname
   FROM TABLE(qsys2.object_statistics('TOYSTORE', '*FILE', '*ALLSIMPLE')) AS x;

--
-- Find Program and Service programs within a library
-- Note: Replace library-name with the target library name
--
SELECT * FROM TABLE (QSYS2.OBJECT_STATISTICS('CED', '*FILE') ) as a;
 

SELECT * FROM ced.sipacard 

SELECT * FROM SMETSTBND.TABEL00F WHERE TTSETT ='XPS' 

DELETE FROM SMEDATBND.TABEL00F WHERE TTSETT ='XPS' 

INSERT INTO SMEDATBND.TABEL00F (TTSETT, TTELEM, TTDESC, TTLIBE, TTUSER) 
SELECT 'XPS', TESSERA, LEFT(ASSEGNATO, 30) , 'T', 'CODPDC: '||CODPDC FROM CED.SIPACARD
 
SELECT * FROM SMEDATBND.TABEL00F WHERE TTSETT='XPS'
 

SELECT * FROM SMEDATBND.TABEL00F  
WHERE  TTSETT='ZAG'
 
SELECT * FROM SMEDATBND.C£CONR0F 
WHERE C£NUMP='ZAG'
 

SELECT * FROM SMETSTBND.MEDAV00F mf  WHERE MD£DTU=230409

INSERT INTO CED.PARES00F 

SELECT * FROM SMEDATBND.PARES01L WHERE PE£PGM IN ('V5BO01CL' , 'XV50019') 
AND LEFT(PE£UTE, 2) IN ('F2', 'F3', 'F4', 'F6', 'F7')


DELETE  FROM SMETSTBND.PARES01L WHERE PE£PGM IN ('V5BO01CL' , 'XV50019') 
AND LEFT(PE£UTE, 2) IN ('F2', 'F3', 'F4', 'F6', 'F7')
 

INSERT INTO NBFDATSTBN.IDOCHEADER 
SELECT * FROM CED.IDOCHEADER 

INSERT INTO NBFDATSTBN.IDOCLINE 
SELECT * FROM CED.IDOCLINE 


SELECT *
--DISTINCT C£CDVA 
FROM CED.C£CONR0F

SELECT * FROM SMETSTBND.BRENTI0F WHERE E§TRAG='PVE'
 

SELECT * FROM SMETSTBND.TABEL00F WHERE TTSETT='XGI' 
AND LEFT(TTLIBE, 2) IN ('F2', 'F3', 'F4', 'F6', 'F7') 
ORDER BY LEFT(TTLIBE, 2)


SELECT * FROM SMEDATBND.C£CONR0F WHERE C£NUMP='X68'

SELECT DISTINCT C£CD01 FROM SMEDATBND.C£CONR0F WHERE C£NUMP='X68' AND C£TPRC='PVE'

SELECT DISTINCT C£CDVA FROM SMEDATBND.C£CONR0F WHERE C£NUMP='X68' AND C£TPRC='PVE' 
AND LEFT(C£CDVA,3) NOT IN (SELECT TRT FROM QTEMP.BNDTRATT)

CREATE TABLE QTEMP.BNDTRATT (TRT CHAR(3))

INSERT INTO QTEMP.BNDTRATT 
SELECT DISTINCT SUBSTR(TTELEM, 3, 3) FROM SMEDATBND.TABEL00F WHERE TTSETT='XGI'  

INSERT INTO CED.C£CONR0FWK (
SELECT * FROM SMEDATBND.C£CONR0F WHERE C£NUMP='X68'  AND C£TPRC='PVE'
)

DELETE FROM SMETSTBND.C£CONR0F WHERE C£NUMP='X68'

UPDATE CED.C£CONR0FWK A 
SET A.C£NUMP = (SELECT B.C£NUMP FROM CED.C£CONR0F B WHERE B.C£CD01=A.C£CD01) 
WHERE A.C£CD01 IN (SELECT C.C£CD01 FROM CED.C£CONR0F C) 

SELECT COUNT(*) FROM CED.C£CONR0FWK WHERE C£NUMP='X68' 

UPDATE CED.C£CONR0FWK 
SET C£NUMP='GC1' 
WHERE C£NUMP='X68'

INSERT INTO SMETSTBND.C£CONR0F SELECT * FROM CED.C£CONR0FWK 

INSERT INTO NBFDATSTBN.IDOCHEADER 
SELECT * FROM CED.IDOCHEADER WHERE DCHPLTCODE='F6' 

INSERT INTO NBFDATSTBN.IDOCLINE 
SELECT * FROM CED.IDOCLINE WHERE DCLID IN (
SELECT DCHID FROM NBFDATSTBN.IDOCHEADER )

COMMIT


SELECT * FROM SMETSTBND.V5TDOC0F WHERE T§DTIN=20230409 AND T§OGIN='XNBI01'  

UPDATE SMETSTBND.V5TDOC0F 
SET T§STAT='10' 
WHERE T§DTIN>=20230409 AND T§OGIN='XNBI01'  

SELECT T§CDMG, CO
UNT(T§CDMG) FROM SMETSTBND.V5TDOC0F -- WHERE T§TDOC='DA'  AND T§TMOD='001'
GROUP BY T§CDMG                               


SELECT * FROM SMETSTBND.V5RDOC0F WHERE R§DTIN=20230409 AND R§OGIN='XNBI01' 

UPDATE SMETSTBND.V5RDOC0F 
SET R§STAT='10' 
WHERE R§DTIN>=20230409 AND R§OGIN='XNBI01'  


DELETE  FROM SMETSTBND.C£CONR0F WHERE LEFT(C£NUMP, 2)='GC' 


SELECT E§COD1, C£CDVA, C£CD01 FROM CED.C£CONR0FWK LEFT JOIN SMETSTBND.BRENTI0F 
ON C£CD01=E§CRAG 
WHERE E§TRAG='PVE' 

UPDATE CED.C£CONR0FWK 
SET C£CDVA='F3'||TRIM(C£CDVA) 
WHERE C£CD01 IN (
SELECT E§CRAG FROM SMETSTBND.BRENTI0F 
WHERE E§TRAG='PVE' AND E§COD1='F7'
)


SELECT * FROM CED.C£CONR0FWK 
WHERE LENGTH(TRIM(C£CDVA))<='4'

SELECT DISTINCT C£CDVA FROM CED.C£CONR0FWK 
WHERE SUBSTR(C£CDVA, 3,1)='M' 

 DELETE FROM SMETSTBND.V5TDOC0F WHERE T§DTIN>=20230410  AND T§OGIN IN ('XNBI01')
 
 DELETE FROM SMETSTBND.V5RDOC0F WHERE R§DTIN>=20230410  AND R§OGIN IN ('XNBI01')  
 
SELECT * FROM smedatfda.tabel00f WHERE ttsett='XGI' 
AND 
 SELECT * FROM smetstbnd.tabel00f WHERE ttsett='XGI'
 
DELETE FROM SMETSTBND.TABEL00F WHERE TTSETT='XGI'

INSERT INTO SMETSTBND.TABEL00F 
SELECT * FROM SMEDATBND.TABEL00F WHERE TTSETT='XGI' 

SELECT DISTINCT C£CDVA FROM CED.C£CONR0FWK WHERE C£CDVA 
NOT IN (SELECT TTELEM FROM SMEDATBND.TABEL00F WHERE TTSETT='XGI') ORDER BY C£CDVA

SELECT * FROM SMEDATBND.TABEL00F WHERE TTSETT='XGI' 
AND LEFT(TTLIBE,2)='F3' 

INSERT INTO SMETSTBND.BRENTI0F 
SELECT * FROM SMEDATFDA.BRENTI0F WHERE E§TRAG='VET' 

AND LEFT(E§CRAG, 1)='L'


SELECT * FROM SMETSTBND.V5TDOC0F WHERE T§CDMG='F3' 

UPDATE SMETSTBND.V5TDOC0F  
SET T§VET1='' WHERE T§CDMG<>'F1' AND 
T§DTIN=20230410 AND T§OGIN='XNBI01' 
AND T§TDOC='DA' AND T§TMOD='001'


SELECT t§zona, count(t§zona) FROM SMETSTBND.V5TDOC0F WHERE T§CDMG='F3' 
GROUP BY t§zona


CREATE TABLE CED.ZONAGIRO(ZONA CHAR(3), GIRO CHAR(5))

INSERT INTO CED.ZONAGIRO
SELECT DISTINCT t§zona,t§cod1 FROM smetstbnd.v5tdoc0f WHERE T§CDMG='F2'  

UPDATE SMETSTBND.V5TDOC0F 
SET T§COD1='F3M09' 
WHERE T§ZONA='A01'
AND T§CDMG='F3' 


UPDATE SMETSTBND.V5TDOC0F A
SET A.T§COD1=(SELECT B.GIRO FROM CED.ZONAGIRO B WHERE  B.ZONA=A.T§ZONA)
WHERE A.T§CDMG='F2' AND 
A.T§DTIN>=20230410  AND A.T§OGIN IN ('XNBI01') 

SELECT DISTINCT C£CDVA FROM CED.C£CONR0FWK WHERE LEFT(C£CDVA, 2)='F2' 


SELECT * FROM SMETSTBND.TABEL00F WHERE TTSETT='XGI' AND (LEFT(TTELEM, 2)='F2' OR LEFT(TTUSER,2)='F2') 

-- CARICO GIACENZE FITTIZIE PER TEST SU AMB BINDI TEST
UPDATE SMETSTBND.GMQUAN0F 
SET G§QTGZ=9000 
WHERE G§CDMG IN ('F2', 'F3', 'F4', 'F6', 'F7' ) 
AND G§TIGC='PF'  AND G§SOGC='UB' 


SELECT e§trag,e§crag,e§nmne,e§rags  FROM smedatbnd.brenti0f WHERE e§trag='VET'  


SELECT E§CRAG, COUNT(E§CRAG) AS FQ FROM SMEDATBND.BRENTI0F WHERE E§TRAG='VET' 
GROUP BY E§CRAG


INSERT INTO CED.BRENTI0F SELECT * FROM SMEDATBND.BRENTI0F WHERE E§TRAG='VET'

SELECT * FROM CED.BRENTI0F ORDER BY E§CRAG DESC 

SELECT * FROM SMETSTBND.BRENTI0F WHERE E§TRAG='VET' ORDER BY E§CRAG DESC 

SELECT * FROM NBFDATSTBN.BSOSPESI0F BF  INNER JOIN SMETSTBND.BRENTI0F ON E§CRAG=UNSENTSHCD
WHERE E§TRAG='PVE' AND E§ZONA='A13' 
ORDER BY UNSENTBLCD



SELECT UNSDOCTYPE, COUNT(UNSDOCTYPE) FROM NBFDATSTBN.BSOSPESI0F bf 
WHERE UNSENTBLCD =224589 GROUP BY UNSDOCTYPE  



-- ESTRAZIONE SITUAZIONE CLIENTI DA SOSPESI0F 
-- SERVE PER VERFIICARE EFFETTIVO ALLINEAMENTO CON SITUAZIONE REALE
--SELECT VARCHAR_FORMAT(CURRENT_DATE, 'YYYYMMDD') FROM SYSIBM.SYSDUMMY1 
DECLARE @OGGI = VARCHAR_FORMAT(CURRENT_DATE, 'YYYYMMDD'); 

WITH X AS (
SELECT  UNSENTBLCD AS CDCLI, UNSENTSHCD AS CDPVE,  
  (CASE WHEN (UNSDOCTYPE IN ('F', 'D'))  THEN UNSVALUE  ELSE  0 END) AS D, 
  (CASE WHEN (UNSDOCTYPE IN ('P', 'A'))  THEN UNSVALUE  ELSE  0 END) AS A 
FROM NBFDATBND.SOSPESI0F bf 
) 
SELECT X.CDCLI, X.CDPVE,
(SELECT E§RAGS  FROM SMETSTBND.BRENTI0F WHERE E§TRAG='CLI' AND E§CRAG=X.CDCLI) AS RAGSOC,
(SELECT E§ZONA  FROM SMETSTBND.BRENTI0F WHERE E§TRAG='PVE' AND E§CRAG=X.CDPVE) AS ZONA, 
SUM(X.D) AS DARE, SUM(X.A) AS AVERE, 
(SUM(X.D) - SUM(X.A)) AS SALDO 
FROM X 
--WHERE ZONA='A13'  
GROUP BY X.CDCLI, X.CDPVE , (SELECT E§ZONA FROM SMETSTBND.BRENTI0F WHERE E§TRAG='PVE' AND E§CRAG=X.CDPVE)
ORDER BY X.CDCLI, ZONA;



UNSEXPDATE
